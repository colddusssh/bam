from config import BOT_TOKEN

from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import MenuButtonWebApp, WebAppInfo
import asyncio
import logging

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

bot = Bot(token= BOT_TOKEN)  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô –¢–û–ö–ï–ù!
dp = Dispatcher()

@dp.message(Command("start"))
async def start(message: types.Message):
    try:
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞")
        
        await bot.set_chat_menu_button(
            chat_id=message.chat.id,
            menu_button=MenuButtonWebApp(
                text="üìù –û—Ç–∫—Ä—ã—Ç—å Mini App",
                web_app=WebAppInfo(url="https://colddusssh.github.io/bam/")  # –í–∞—à URL
            )
        )
        await message.answer("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç –∏–∑ Mini App!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ :(")

@dp.message(F.web_app_data)
async def handle_web_app_data(message: types.Message):
    try:
        logger.info(f"\n{'='*30}\n–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å WebAppData!")
        logger.info(f"User ID: {message.from_user.id}")
        logger.info(f"Chat ID: {message.chat.id}")
        logger.info(f"–î–∞—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: {message.date}")
        logger.info(f"–î–∞–Ω–Ω—ã–µ: {message.web_app_data.data}")
        logger.info(f"Raw message: {message}\n{'='*30}")
        
        await message.answer(
            f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã!\n"
            f"üìù –¢–µ–∫—Å—Ç: {message.web_app_data.data}\n"
            f"‚è∞ –í—Ä–µ–º—è: {message.date}"
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ WebAppData: {e}")
        await message.answer("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö")

async def main():
    logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())